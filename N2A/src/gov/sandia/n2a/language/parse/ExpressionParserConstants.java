/* Generated By:JJTree&JavaCC: Do not edit this line. ExpressionParserConstants.java */
/*
Copyright 2013 Sandia Corporation.
Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
the U.S. Government retains certain rights in this software.
Distributed under the BSD-3 license. See the file LICENSE for details.
*/

package gov.sandia.n2a.language.parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 7;
  /** RegularExpression Id. */
  int EXPONENT = 8;
  /** RegularExpression Id. */
  int STRING_LITERAL = 9;
  /** RegularExpression Id. */
  int IDENTIFIER = 10;
  /** RegularExpression Id. */
  int LETTER = 11;
  /** RegularExpression Id. */
  int DIGIT = 12;
  /** RegularExpression Id. */
  int TICKMARK = 13;
  /** RegularExpression Id. */
  int ASSIGN = 14;
  /** RegularExpression Id. */
  int NASSIGN = 15;
  /** RegularExpression Id. */
  int AASSIGN = 16;
  /** RegularExpression Id. */
  int CASSIGN = 17;
  /** RegularExpression Id. */
  int COMMA = 18;
  /** RegularExpression Id. */
  int SEMI = 19;
  /** RegularExpression Id. */
  int GT = 20;
  /** RegularExpression Id. */
  int LT = 21;
  /** RegularExpression Id. */
  int EQ = 22;
  /** RegularExpression Id. */
  int LE = 23;
  /** RegularExpression Id. */
  int GE = 24;
  /** RegularExpression Id. */
  int NE = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int PLUS = 28;
  /** RegularExpression Id. */
  int MINUS = 29;
  /** RegularExpression Id. */
  int MUL = 30;
  /** RegularExpression Id. */
  int DIV = 31;
  /** RegularExpression Id. */
  int MOD = 32;
  /** RegularExpression Id. */
  int NOT = 33;
  /** RegularExpression Id. */
  int POWER = 34;
  /** RegularExpression Id. */
  int LSQ = 35;
  /** RegularExpression Id. */
  int RSQ = 36;
  /** RegularExpression Id. */
  int LRND = 37;
  /** RegularExpression Id. */
  int RRND = 38;
  /** RegularExpression Id. */
  int LBRC = 39;
  /** RegularExpression Id. */
  int RBRC = 40;
  /** RegularExpression Id. */
  int UNITS = 41;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_UNITS = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"\\\'\"",
    "<ASSIGN>",
    "\"=\"",
    "\"+=\"",
    "\":=\"",
    "\",\"",
    "\";\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"!\"",
    "\"^\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "<UNITS>",
  };

}
